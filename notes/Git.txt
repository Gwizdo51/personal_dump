clone a repository (HTTPS or SSH):
git clone <github_link>

add a file/folder to the current commit (stage an item):
git add <path/to/item>
wildcards are accepted:
git add *

remove an item from the stage (undo "git add"):
git reset <path/to/item>
remove all files from the stage:
git reset

to delete an item and stage the deletion:
git rm <path/to/item>
to delete an item from the index and stage the deletion (file is not deleted locally, but is not tracked anymore):
git rm --cached <path/to/item>

to move/rename an item and stage the action:
git mv <path/to/item> <path/to/destination>
(=> fixes renaming on Windows)

commit the changes (only on the stage):
git commit -m "commit message"
commit the changes on the last commit:
git commit --amend

update the index (references to the could repository):
git fetch (--all)

pull the commits made to the cloud repository in the local copy:
git pull (--all)
pull the commits made to a specific branch:
git switch <branch>
git pull

push your local commits on the cloud repository:
git push

display the status of the local copy compared to the index:
git status

delete references of branches that have been deleted on the cloud repository:
git fetch --prune
git fetch -p

get the list of all the configs of the current repository:
git config --list

make the current directory a git repository:
git init

checkout specific item from specific commit (get a copy of an file/folder from a different commit):
git checkout <commit#> <path/to/item>

get the list of all (local and index) branches:
git branch -a

add a new branch to the local repository:
git branch <new_branch>

change branches:
git switch <branch>

add the new branch on the cloud repository, with tracking (link between local and cloud branches):
git push -u origin <new_branch>

delete a branch from the local repository:
git branch -d <branch>
git branch -D <branch> (== git branch -df <branch>)

delete a branch on the cloud repository:
git push -d origin <branch>

apply changes of a parent branch on a child branch:
git checkout <child_branch>
git rebase <parent_branch>

apply changes of a child branch on a parent branch:
git checkout <parent_branch>
git merge <child_branch>

hide current working directory differences from the index (hidden commit):
git stash
retrieve working directory differences (reapply hidden commit):
git stash pop

apply a specific commit on the current branch:
git cherry-pick <commit_hash_from_log>

git diff:
- show the diff between the modified files (not staged) and the latest commit (HEAD):
git diff
- show the diff between the stage and the latest commit (HEAD):
git diff --staged
- show the diff between my branch and the online branch (all files, all commits):
git diff origin/HEAD
- show the diff between the commits of HEAD (stage included) and the online branch (all files, all commits):
git diff --cached origin/HEAD
- show the diff between two commits:
git diff <commit_hash_start> <commit_hash_end>
- show the diff between two branches:
git diff <branch_start>..<branch_end>
- show the modifications made to a specific file since the last commit:
git diff <path/to/file>
- show the diff between two different files in the working directory:
git diff --no-index <path/to/original_file> <path/to/modified_file>

remove the "WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!" error:
ssh-keygen -R github.com

update git on windows:
git update-git-for-windows

undo last commit, but keep the changes:
git reset HEAD^
undo N commits, but keep the changes:
git reset HEAD~N

display the history of the current branch as a tree:
git log --graph --decorate --pretty=oneline --abbrev-commit
