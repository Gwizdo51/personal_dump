clone a repository:
git clone <path_to_file>
(replace <path_to_file> with the link from "clone by [...]")

get info on main branch:
git rev-parse --show-toplevel

add a file/folder to the index / stage a file/folder (must be commited):
git add <path_to_file>
wildcards are accepted:
git add *

to remove a file/folder from the index / unstage a file/folder (file is not deleted locally, must still be commited):
git rm --cached <path_to_file>

to move a staged file/folder in the index (file is moved locally, must still be commited):
git mv <file_name> <file_destination>
=> fixes renaming on Windows

save the changes added (add a commit):
git commit -m "commit message"

pull the changes made to the cloud repository in the local copy:
git fetch (--all)
git pull (--all)
git pull origin master
git pull <REMOTE> <name_of_branch>

push your local changes on the cloud repository:
git push

informations on the current branch:
git status

delete local branches that have been deleted on the cloud repository:
git fetch --prune

get the list of all the configs of the current repository:
git config --list

make the current directory a git repository:
git init

checkout specific item from specific commit:
git checkout <commit#> <item_path>

get the list of all (local and cloud) branches:
git branch -a

add a new branch to the local repository:
git branch <new_branch>
git checkout -b <new_branch>

add the new branch on the cloud repository, with tracking (link between local and cloud branches):
git push -u origin <new_branch>

delete a branch from the local repository:
git branch -d <branch>
git branch -D <branch> (== git branch -df <branch>)

delete a branch on the cloud repository:
git push origin --delete <branch>

switch branch:
git switch <branch>
git checkout <branch>

apply changes of a parent branch on a child branch:
git checkout <child_branch>
git rebase <parent_branch>

apply changes of a child branch on a parent branch:
git checkout <parent_branch>
git merge <child_branch>

hide current working directory differences from the index (hidden commit):
git stash
retrieve working directory differences (reapply hidden commit):
git stash pop

apply a specific commit on a branch:
git switch <branch>
git cherry-pick <commit_hash_from_log>

git diff: (the stage is considered a commit for git diff)
- git diff
shows the diff between the modified files (not staged) and the latest commit (HEAD)
- git diff --staged
shows the diff between the stage and the latest commit (HEAD)
- git diff origin/HEAD
shows the diff between my branch and the online branch (all files, all commits)
- git diff --cached origin/HEAD
shows the diff between the commits of HEAD (stage included) and the online branch (all files, all commits)
- git diff <commit_hash_start> <commit_hash_end>
shows the diff between two commits
- git diff <branch_start>..<branch_end>
shows the diff between two branches
- git diff <file_path>
shows the modifications made to a specific file since the last commit
- git diff --no-index <original_file_path> <modified_file_path>
shows the diff between two different files in the working directory

remove the "WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!" error:
ssh-keygen -R github.com

update git on windows:
git update-git-for-windows
