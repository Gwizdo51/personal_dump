any character except line break:
.

escaped character (period):
\.

tab:
\t
new line:
\n
carriage return:
\r

any digit:
\d
any non digit:
\D
any word character, alphanumeric ([0-9a-zA-Z_]):
\w
any non alphanumeric character:
\W
any whitespace character (spaces, tabs, line breaks):
\s
any non whitespace character:
\S
end of word:
\b

exactly "abc":
abc

any one of a, b or c:
[abc]
anything but a, b or c:
[^abc]

anything from a to z:
[a-z]

3 "a" in a row:
a{3}
between 1 and 3 "a" in a row: (will match as many as possible)
a{1,3}
between 1 and 3 "a" in a row non greedy: (will match as few as possible)
a{1,3}?

0 or more a:
a*
1 or more a:
a+
0 or 1 a:
a?
0 or more a non greedy (matches as little text as possible):
a*?
1 or more a non greedy:
a+?
0 or 1 a non greedy:
a??


start of string (nothing before a):
^a
end of string (nothing after a):
a$

unamed captured groups of characters (1,2,3, ...) (0 is the string matched by the RegEx, always captured):
(abc)
named captured groups of characters:
(?<group_name>abc)
non-capturing groups of characters:
(?:abc)

OR in groups:
(abc|def)

notes on groups:
- can mix any kinds of grouping in a single RegEx
- if there is a match:
    - the part of the string matched by the RegEx will always be captured as group #0
    - any non-capturing group will not be accessible
    - any unnamed captured group will be accessible as group #1, 2, 3, ...
    - any named captured group will be accessible by its name
